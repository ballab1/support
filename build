#!/bin/bash

declare OUTPUT_FILE
declare TOP=/opt

#----------------------------------------------------------------------------------------------
function my.buildWrapperUsage()
{
    exit 0;
}
export -f my.buildWrapperUsage

#----------------------------------------------------------------------------------------------
function my.buildWrapperArgs()
{
    return 0
}
export -f my.buildWrapperArgs

#----------------------------------------------------------------------------------------------
function my.environment()
{
    export HOST_IP=$(hostname -i)
    export HOST_NAME=$(hostname -s)
    export HOST_FQDN=$(hostname -f)
    export CFG_USER_SECRETS=${CFG_USER_SECRETS:-}
    export CRYPT_FILE=~/.crypt-key
}
export -f my.environment

#----------------------------------------------------------------------------------------------
function my.loadLibs()
{
    local fn="${1:?}"

    if [ "$(env | grep -c "BASH_FUNC_${fn}%%")" -eq 0 ]; then
        top="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
        if [ "$top" = '/usr/local/bin' ] && [ -e /usr/local/crf/bin/loadLibraries.sh ]; then       
            source /usr/local/crf/bin/loadLibraries.sh
            top =/opt
        elif [ -e "${top}/libs/loadLibraries.sh" ]; then
            source "${top}/libs/loadLibraries.sh"
            TOP="$top"
            my.environment
        else
            echo '***ERROR unable to locate libraries'; exit 1
        fi
    fi
}
export -f my.loadLibs

#----------------------------------------------------------------------------------------------

declare fn=build.wrapper

my.loadLibs "$fn"

declare -i shVal=0
lib.args 'my.buildWrapperArgs' 'my.buildWrapperUsage' 'ouptput:' 'o:' "$@" && shVal=$? || shVal=$?
if [ "${shVal:-}" -gt 0 ];then
    if [ "${shVal:-}" -gt $# ]; then
        echo '***ERROR failure while loading libraries'
        exit 1
    fi
    shift "${shVal:-}"
fi

: ${BASE_TAG:=latest}
"$fn" "$TOP" "$@"
