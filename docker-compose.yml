version: '3.3'

services:
    alpinefull:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: alpinefull
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: base_container:${CONTAINER_TAG:-latest}
            cache_from:
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./alpinefull
            dockerfile: Dockerfile
        container_name: alpinefull
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: alpinefull:${CONTAINER_TAG:-latest}

    base:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: base_container
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: alpine:3.7
                TZ: "America/New_York"
            cache_from:
                - alpine:3.7
            context: ./base_container
            dockerfile: Dockerfile
        container_name: base
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: base_container:${CONTAINER_TAG:-latest}

    broker:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: broker
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
                JMX_PORT: 7203
                KAFKA_DIR: /usr/local/kafka
                KAFKA_PORT: 9092
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
            context: ./kafka-broker
            dockerfile: Dockerfile
        container_name: broker
#        depends_on:
#            - zookeeper
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.1.3.6:9092
            KAFKA_BROKER_ID: 3
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_PARTITIONS: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181,10.1.3.11:2181
            ZOOKEEPER_HOST: zookeeper
            ZOOKEEPER_PORT: 2181
            ZOOKEEPER_TIMEOUT: 6000
        image: broker:${CONTAINER_TAG:-latest}

    carton:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: perl-carton
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: perl-5.24.3:${CONTAINER_TAG:-latest}
            cache_from:
                - perl-5.24.3:${CONTAINER_TAG:-latest}
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./perl-carton
            dockerfile: Dockerfile
        container_name: carton
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: perl-carton:${CONTAINER_TAG:-latest}

    files-librd:
        build:
            args:
                CONTAINER_NAME: files-librd
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: perl-carton:${CONTAINER_TAG:-latest}
            cache_from:
                - perl-carton:${CONTAINER_TAG:-latest}
                - perl-5.24.3:${CONTAINER_TAG:-latest}
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./files-librd
            dockerfile: Dockerfile
        container_name: files-librd
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: files-librd:${CONTAINER_TAG:-latest}

    files-kafka:
        build:
            args:
                CONTAINER_NAME: files-kafka
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: perl-carton:${CONTAINER_TAG:-latest}
            cache_from:
                - perl-carton:${CONTAINER_TAG:-latest}
                - perl-5.24.3:${CONTAINER_TAG:-latest}
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./files-kafka
            dockerfile: Dockerfile
        container_name: files-kafka
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        hostname: files-kafka
        image: files-kafka:${CONTAINER_TAG:-latest}

    gradle:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: gradle
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
            cache_from:
                - openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./gradle
            dockerfile: Dockerfile
        container_name: gradle
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: gradle_4.4.1-jdk8-alpine:${CONTAINER_TAG:-latest}

    hubot:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: hubot
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: supervisord:${CONTAINER_TAG:-latest}
                HUBOT_USER: hubot
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - supervisord:${CONTAINER_TAG:-latest}
            context: ./hubot
            dockerfile: Dockerfile
        container_name: hubot
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            HUBOT_BOT_NAME: hubot
            HUBOT_GITHUB_REPOS_MAP: '{"git":["ballab1/alpinefull","ballab1/bin","ballab1/DBMS-backup","ballab1/hubot","ballab1/jenkins","ballab1/jenkins-files","ballab1/kafka-i386","ballab1/mysql","ballab1/nagios","ballab1/nginx","ballab1/phpmyadmin","ballab1/prod","ballab1/update-check","ballab1/UptimePipeline","ballab1/webhooks","ballab1/zenphoto"]}'
            HUBOT_GITHUB_TOKEN: $CFG_GITHUB_HUBOT_TOKEN
#            HUBOT_GITHUB_WEBHOOK_SECRET: $CFG_HUBOT_GITHUB_WEBHOOK_SECRET
            HUBOT_SLACK_TOKEN: $CFG_SLACK_HUBOT_TOKEN
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER
        image: hubot:${CONTAINER_TAG:-latest}
 
    jenkins:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: jenkins
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
                JENKINS_HOME: ${JENKINS_HOME:-/var/jenkins_home}
                docker_gid: 999
                docker_uid: 999
                jenkins_gid: 1953
                jenkins_uid: 1953
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
            context: ./jenkins
            dockerfile: Dockerfile
        container_name: jenkins
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            JENKINS_GITHUB_EMAIL: $CFG_GITHUB_JENKINS_EMAIL
            JENKINS_GITHUB_NAME: $CFG_GITHUB_JENKINS_NAME
            JENKINS_GITHUB_CREDENTIALS: "${CFG_GITHUB_JENKINS_USER}:${CFG_GITHUB_JENKINS_TOKEN}"
        image: jenkins:${CONTAINER_TAG:-latest}

    kafkamgr:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: kafkamgr
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
                KM_ARGS: '-Djava.net.preferIPv4Stack=true -Dapplication.home=/usr/local/kafka-manager/home' 
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
            context: ./kafka-manager
            dockerfile: Dockerfile
        container_name: kafkamgr
        environment:
            APPLICATION_SECRET: letmein
#            BASE_ZK_PATH: 
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            CONSUMER_PROPERTIES_FILE: /usr/local/kafka-manager/conf/consumer.properties
            KAFKA_MANAGER_PASSWORD: password
            KAFKA_MANAGER_USERNAME: admin
            KAFKA_MANAGER_AUTH_ENABLED: 'false'
            KAFKA_MANAGER_LOGLEVEL: INFO
            KM_HTTP_CONTEXT: /
#            KM_HTTP_CONTEXT: /kafkamgr
            ZK_HOSTS: 10.1.3.6:2181,10.1.3.11:2181
        image: kafkamgr:${CONTAINER_TAG:-latest}

    movefiles:
        build:
            args:
                CONTAINER_NAME: movefiles
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: perl-carton:${CONTAINER_TAG:-latest}
            cache_from:
                - perl-carton:${CONTAINER_TAG:-latest}
                - perl-5.24.3:${CONTAINER_TAG:-latest}
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./movefiles
            dockerfile: Dockerfile
        container_name: moovefiles
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: movefiles:${CONTAINER_TAG:-latest}

    mysql:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: mysql
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: mysql:8.0.0
                TZ: "America/New_York"
            cache_from:
                - mysql:8.0.0
            context: ./mysql
            dockerfile: Dockerfile
        container_name: mysql
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            TZ: "America/New_York"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_PASSWORD: $CFG_PASS
            MYSQL_ROOT_PASSWORD: $CFG_PASS
            MYSQL_USER: $CFG_USER
        image: mysql:latest

    nagios:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: nagios
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: php5:${CONTAINER_TAG:-latest}
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - supervisord:${CONTAINER_TAG:-latest}
                - php5:${CONTAINER_TAG:-latest}
            context: ./nagios
            dockerfile: Dockerfile
        container_name: nagios
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            NAGIOS_GITHUB_CREDENTIALS: ${CFG_GITHUB_USER}:${CFG_GITHUB_TOKEN}
            NAGIOS_GITHUB_EMAIL: $CFG_GITHUB_EMAIL
            NAGIOS_GITHUB_NAME: $CFG_GITHUB_NAME
            NAGIOS_PASS: $CFG_PASS
            NAGIOS_USER: $CFG_USER
            NCONF_DBHOST: mysql
            NCONF_DBNAME: nconf
            NCONF_DBPASS: $CFG_PASS
            NCONF_DBUSER: $CFG_USER
            SUPERVISORD_PASS: $CFG_PASS         
            SUPERVISORD_USER: $CFG_USER
        image: nagios:${CONTAINER_TAG:-latest}

    nginx:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: nginx
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: php5:${CONTAINER_TAG:-latest}
                SSL_ALREADY_GENERATED: 'true'
            cache_from:
                - alpine:3.7
                - supervisord:${CONTAINER_TAG:-latest}
                - nginx_base:${CONTAINER_TAG:-latest}
                - php5:${CONTAINER_TAG:-latest}
            context: ./nginx
            dockerfile: Dockerfile
        container_name: nginx
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER
        image: nginx:${CONTAINER_TAG:-latest}

    nginx_alt:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: nginx_alt
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: nginx:1.15.0-alpine
            cache_from:
                - nginx:1.15.0-alpine
                - alpine:3.7
            context: ./nginx_alt
            dockerfile: Dockerfile
        container_name: nginx_alt
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER
        image: nginx_alt:${CONTAINER_TAG:-latest}

    nginx_base:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: nginx_base
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: supervisord:${CONTAINER_TAG:-latest}
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - supervisord:${CONTAINER_TAG:-latest}
            context: ./nginx_base
            dockerfile: Dockerfile
        container_name: nginx_base
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER 
        image: nginx_base:${CONTAINER_TAG:-latest}

    openjdk8:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: openjdk_8u131.11-r2
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: base_container:${CONTAINER_TAG:-latest}
            cache_from:
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./openjdk8
            dockerfile: Dockerfile
        container_name: openjdk8
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}

    openjre8:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: openjre_8u131.11-r2
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: base_container:${CONTAINER_TAG:-latest}
            cache_from:
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./openjre8
        container_name: openjre8
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: openjre_8u131.11-r2:${CONTAINER_TAG:-latest}

    perl:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: perl-5.24.3
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: base_container:${CONTAINER_TAG:-latest}
            cache_from:
                - base_container:${CONTAINER_TAG:-latest}
            context: ./perl.5-24-3
            dockerfile: Dockerfile
        container_name: perl
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
        image: perl-5.24.3:${CONTAINER_TAG:-latest}

    php5:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: php5
                CONTAINER_VERSION: 3.0.0
##                FROM_BASE: nginx_base:${CONTAINER_TAG:-latest}
                FROM_BASE: nginx_alt:${CONTAINER_TAG:-latest}
            cache_from:
                - alpine:3.7
##                - base_container:${CONTAINER_TAG:-latest}
##                - supervisord:${CONTAINER_TAG:-latest}
##                - nginx_base:${CONTAINER_TAG:-latest}
                - nginx_alt:${CONTAINER_TAG:-latest}
            context: ./php5
            dockerfile: Dockerfile
        container_name: php5
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER 
        image: php5:${CONTAINER_TAG:-latest}

    php7:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: php7
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: nginx_base:${CONTAINER_TAG:-latest}
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - supervisord:${CONTAINER_TAG:-latest}
                - nginx_base:${CONTAINER_TAG:-latest}
            context: ./php7
            dockerfile: Dockerfile
        container_name: php7
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER 
        image: php7:${CONTAINER_TAG:-latest}

    phpadmin:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION}"
                CONTAINER_NAME: phpadmin
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: php5:${CONTAINER_TAG:-latest}
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - supervisord:${CONTAINER_TAG:-latest}
                - nginx_base:${CONTAINER_TAG:-latest}
                - php5:${CONTAINER_TAG:-latest}
            context: ./phpadmin
            dockerfile: Dockerfile
        container_name: phpadmin
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            MYSQL_PASSWORD: $CFG_PASS
            MYSQL_ROOT_PASSWORD: $CFG_PASS
            MYSQL_USER: $CFG_USER
#            PMA_ARBITRARY: 1
            PMA_HOST: mysql
            PMA_VERBOSE: 1
            PMA_USER: $CFG_USER
            PMA_PASSWORD: $CFG_PASS
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER
        image: phpadmin:${CONTAINER_TAG:-latest}

    postgres:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: postgres
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: base_container:${CONTAINER_TAG:-latest}
            cache_from:
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./postgres
            dockerfile: Dockerfile
        container_name: postgres
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            POSTGRES_PASSWORD: postgres
        image: postgresql-10.3:${CONTAINER_TAG:-latest}

    smonitor:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: smonitor
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: php5:${CONTAINER_TAG:-latest}
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - supervisord:${CONTAINER_TAG:-latest}
                - nginx_base:${CONTAINER_TAG:-latest}
                - php5:${CONTAINER_TAG:-latest}
            context: ./supervisord-monitor
            dockerfile: Dockerfile
        container_name: smonitor
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SMONITOR_PASS: $CFG_PASS
            SMONITOR_USER: $CFG_USER
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER 
        image: supervisord-monitor:${CONTAINER_TAG:-latest}

    supervisord:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: supervisord
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: base_container:${CONTAINER_TAG:-latest}
            cache_from:
                - base_container:${CONTAINER_TAG:-latest}
                - alpine:3.7
            context: ./supervisord
            dockerfile: Dockerfile
        container_name: supervisord
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER
        image: supervisord:${CONTAINER_TAG:-latest}

    webdav:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: webdav
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: base_container:${CONTAINER_TAG:-latest}
                WEBDAV_GROUP: webdav
                WEBDAV_READWRITE: disable
                WEBDAV_WHITELIST: 127.0.0.1
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
            context: ./webdav
            dockerfile: Dockerfile
        container_name: webdav
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            WEBDAV_USER: $CFG_USER
            WEBDAV_PASS: $CFG_PASS
            WEBDAV_GROUP: webdav
            WEBDAV_READWRITE: disable
            WEBDAV_WHITELIST: 127.0.0.1
        image: webdav:${CONTAINER_TAG:-latest}

    zen:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: zen
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: php7:${CONTAINER_TAG:-latest}
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - supervisord:${CONTAINER_TAG:-latest}
                - php7:${CONTAINER_TAG:-latest}
            context: ./zenphoto
            dockerfile: Dockerfile
        container_name: zen
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            SUPERVISORD_PASS: $CFG_PASS
            SUPERVISORD_USER: $CFG_USER 
            ZEN_HOST: mysql
            ZEN_PASS: $CFG_PASS
            ZEN_USER: $CFG_USER
        image: zenphoto:${CONTAINER_TAG:-latest}

    zookeeper:
        build:
            args:
                CBF_VERSION: "${CBF_VERSION:-}"
                CONTAINER_NAME: zookeeper
                CONTAINER_VERSION: 3.0.0
                FROM_BASE: openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
            cache_from:
                - alpine:3.7
                - base_container:${CONTAINER_TAG:-latest}
                - openjdk_8u131.11-r2:${CONTAINER_TAG:-latest}
            context: ./kafka-zookeeper
            dockerfile: Dockerfile
        container_name: zookeeper
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            ZOOKEEPER_USER: zookeeper
            ZOOKEEPER_CONF_DIR: /usr/local/zookeeper/conf
            ZOOKEEPER_DATA_DIR: /usr/local/zookeeper/data
            ZOOKEEPER_LOG_DIR: /usr/local/zookeeper/logs
            ZOOKEEPER_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            ZOOKEEPER_INIT_LIMIT: 5
            ZOOKEEPER_SYNC_LIMIT: 2
#            ZOOKEEPER_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
        hostname: zookeeper
        image: zookeeper:${CONTAINER_TAG:-latest}
